{"version":3,"sources":["reportWebVitals.js","components/Menubar.tsx","pages/HomepageLayout.tsx","pages/Projects.tsx","components/Preview.tsx","pages/AnimationPage.tsx","pages/Homepage.tsx","util/helper.tsx","pages/AboutMe.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Menubar","location","useLocation","useState","pathname","activeItem","setActiveItem","Menu","inverted","fixed","Container","Item","as","Link","to","active","header","onClick","Image","size","src","style","marginRight","name","position","HomepageLayout","Projects","Preview","Segment","Header","AnimationPage","numElem","Grid","columns","map","elem","i","Transition","Group","Column","marginBottom","Homepage","arrayGenerator","num","returnArray","Array","from","keys","v","index","toString","numberToString","AboutMe","filesArray","console","log","className","App","useRoutes","path","element","children","AppWrapper","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0b057a6e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React , {useState} from 'react';\r\nimport {Menu, Container, Image} from 'semantic-ui-react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst Menubar = () => {\r\n    let location = useLocation();\r\n    const src:String = 'projects/res/img/logo.png';\r\n    const [activeItem, setActiveItem] = useState(location.pathname);\r\n    return (\r\n        <>\r\n            <Menu inverted fixed=\"top\">\r\n                <Container>\r\n                <Menu.Item as={Link} to=\"/\" \r\n                active={activeItem === '/'} \r\n                header \r\n                onClick={() => setActiveItem('/')}>\r\n                    <Image size=\"mini\" src={src} style={{marginRight:'1.5em'}} />\r\n                    Home\r\n                </Menu.Item>\r\n\r\n                <Menu.Item as={Link} to=\"/about-projects\" \r\n                active={activeItem === '/about-projects'} \r\n                header \r\n                onClick={() => setActiveItem('/about-projects')}>\r\n                    About Me\r\n                </Menu.Item>\r\n\r\n                </Container>\r\n                \r\n                <Menu.Item\r\n                    name='projects'\r\n                    active={activeItem === '/projects'}\r\n                    as={Link}\r\n                    to='/projects'\r\n                    onClick={() => setActiveItem('/projects')}                \r\n                />\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item\r\n                        name='Animation'\r\n                        active={activeItem === '/animation'}\r\n                        as={Link}\r\n                        to='/animation'\r\n                        onClick={() => setActiveItem('/animation')}\r\n                    />\r\n                </Menu.Menu>\r\n            </Menu>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Menubar","import React, {useState} from 'react';\r\nimport {Segment, Header, Button, Icon} from 'semantic-ui-react';\r\nimport {Link, Outlet} from 'react-router-dom';\r\nimport Menubar from '../components/Menubar';\r\nconst HomepageLayout = () => {\r\n    return (\r\n        <div>\r\n            <Menubar />\r\n            <Outlet />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomepageLayout;","import React, {useState} from 'react';\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Header, Segment } from 'semantic-ui-react';\r\n\r\nconst Preview = () => {\r\n    return (\r\n        <>\r\n            <Segment>\r\n                <Header as=\"h4\">\r\n                    Projects\r\n                </Header>\r\n            </Segment>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Preview;","import React from 'react';\r\nimport Preview from '../components/Preview';\r\nimport {Grid, Transition} from 'semantic-ui-react';\r\n\r\nconst AnimationPage = () => {\r\n    // const numElem:number[] = Array.from(Array(2).keys())\r\n    const numElem:number[] = [1,2,3];\r\n    return (\r\n        <>\r\n            <Grid columns={3}>\r\n                { numElem &&\r\n                numElem.map((elem, i) =>  {\r\n                    <Transition.Group>\r\n                        {numElem &&\r\n                        numElem.map((elem) => (\r\n                            <Grid.Column key={elem} style={{ marginBottom: 20 }}>\r\n                                <Preview/>\r\n                            </Grid.Column>\r\n                        ))}\r\n                    </Transition.Group>\r\n                })}\r\n            </Grid>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AnimationPage;","import React, {useState} from 'react';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n};\r\nexport default Homepage;","const arrayGenerator = (num:number, src:String) => {\r\n    const numArray:number[] = Array.from(Array(num).keys()).map(v=>v+1);\r\n    const returnArray:String[] = numArray.map((elem)=> numberToString(src, elem));\r\n    return returnArray;\r\n\r\n};\r\n\r\nfunction numberToString(src:String, index:number):String {\r\n    return `${src}/${index.toString()}.png`;\r\n}\r\n\r\nexport default arrayGenerator;","import React, {useState} from 'react';\r\nimport {Image, Grid, Header} from 'semantic-ui-react';\r\nimport arrayGenerator from '../util/helper';\r\n\r\nconst AboutMe = () => {\r\n\r\n    const RES_FILE_SOURCE:String = \"projects/res/img\";\r\n    const NUM_ELEM:number = 9;\r\n    const filesArray = arrayGenerator(NUM_ELEM, RES_FILE_SOURCE);\r\n    console.log(filesArray);\r\n    return (\r\n        <div className=\"projects\">\r\n            <Grid columns={3}>\r\n                {filesArray &&\r\n                filesArray.map((elem,i)=> (\r\n                <Grid.Column key={i} style={{ marginBottom: 20 }}>\r\n                    <Image src={elem} />\r\n                </Grid.Column>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AboutMe;","import './App.css';\n\nimport { BrowserRouter as Router, useRoutes } from 'react-router-dom';\nimport HomepageLayout from './pages/HomepageLayout';\nimport Projects from './pages/Projects';\nimport AnimationPage from './pages/AnimationPage';\nimport Homepage from './pages/Homepage';\nimport AboutMe from './pages/AboutMe';\n\nconst App = () => {\n  let element = useRoutes([\n    // A route object has the same properties as a <Route>\n    // element. The `children` is just an array of child routes.\n    {\n      path: '/',\n      element: <HomepageLayout />,\n      children: [\n        { path: '/home', element: <Homepage /> },\n        { path: '/projects', element: <Projects /> },\n        { path: '/animation', element: <AnimationPage /> },\n        { path: '/about-projects', element: <AboutMe /> },\n      ]\n    }\n  ]);\n\n  return element;\n}\n\nconst AppWrapper = () => {\n  return (\n    <Router>\n        <App/>\n    </Router>\n  )\n}\nexport default AppWrapper;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <App />\n  ,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}